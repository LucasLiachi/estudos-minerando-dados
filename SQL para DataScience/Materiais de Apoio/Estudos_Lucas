-- query simples

Select

    DISTINCT

    ORDER_ID AS 'Ordem'
    ,ORDER_STATUS AS 'status'
    ,CUSTOMER_ID AS 'cliente'

FROM ORDERS;

--distinct

Select

    DISTINCT

    ORDER_STATUS AS 'status'    
    
FROM ORDERS;

-- count

Select

    COUNT (*) AS 'quantidade de linhas'
     
FROM ORDERS;

--WHERE

SELECT 

COUNT (*)

FROM ORDERS

WHERE ORDER_STATUS='delivered';

-- diferente de 

SELECT 

COUNT (*)

FROM ORDERS

WHERE ORDER_STATUS!='delivered';

-- diferente de e

SELECT *

FROM ORDERS
WHERE ORDER_STATUS!='delivered'
AND ORDER_APPROVED_AT IS NULL;

-- diferente de ou

SELECT *

FROM ORDERS
WHERE ORDER_STATUS!='delivered'
OR ORDER_APPROVED_AT IS NULL;


-- Cont where


Select

    ORDER_STATUS AS 'status'
    ,COUNT (*) AS 'quantidade de linhas'
     
FROM ORDERS

WHERE ORDER_STATUS ='delivered';



----------------------- Like


SELECT *
FROM CUSTOMERS
WHERE CUSTOMER_CITY LIKE 'mogi%';

SELECT *
FROM CUSTOMERS
WHERE CUSTOMER_CITY NOT LIKE 'mogi%';

SELECT *
FROM CUSTOMERS
WHERE CUSTOMER_CITY LIKE '%mogi';

----------- Group e havin

SELECT COUNT(*)
FROM ORDERS
GROUP BY CUSTOMER_ID;

SELECT PAYMENT_TYPE AS 'Tipo de pagamento'
,SUM(PAYMENT_VALUE) AS 'soma'
FROM ORDER_PAYMENTS
GROUP BY PAYMENT_TYPE
HAVING SUM(PAYMENT_VALUE) > 10000;


----------Funções

SELECT PAYMENT_TYPE AS 'Tipo de pagamento'
        ,SUM(PAYMENT_VALUE) AS 'soma'
FROM ORDER_PAYMENTS
GROUP BY PAYMENT_TYPE;


SELECT PAYMENT_TYPE AS 'Tipo de pagamento'
        ,AVG(PAYMENT_VALUE) AS 'soma'
FROM ORDER_PAYMENTS
GROUP BY PAYMENT_TYPE;

----------Maximo e minimo

SELECT PAYMENT_TYPE AS 'Tipo de pagamento'
        ,MIN(PAYMENT_VALUE) AS 'soma'
FROM ORDER_PAYMENTS
GROUP BY PAYMENT_TYPE;

SELECT PAYMENT_TYPE AS 'Tipo de pagamento'
        ,MAX(PAYMENT_VALUE) AS 'soma'
FROM ORDER_PAYMENTS
GROUP BY PAYMENT_TYPE;

------- having e order By

SELECT PAYMENT_TYPE AS 'Tipo de pagamento'
,SUM(PAYMENT_VALUE) AS 'soma'
FROM ORDER_PAYMENTS
GROUP BY PAYMENT_TYPE
HAVING SUM(PAYMENT_VALUE) > 0
ORDER BY SUM(PAYMENT_VALUE);

SELECT PAYMENT_TYPE AS 'Tipo de pagamento'
,SUM(PAYMENT_VALUE) AS 'soma'
FROM ORDER_PAYMENTS
GROUP BY PAYMENT_TYPE
HAVING SUM(PAYMENT_VALUE) > 0
ORDER BY SUM(PAYMENT_VALUE) DESC;

SELECT PAYMENT_TYPE AS 'Tipo de pagamento'
,SUM(PAYMENT_VALUE) AS 'soma'
FROM ORDER_PAYMENTS
GROUP BY PAYMENT_TYPE
HAVING SUM(PAYMENT_VALUE) > 0
ORDER BY 1;

--------------------------------JOINS

--Separados

SELECT *
FROM ORDERS PEDIDO ;

SELECT *
FROM CUSTOMERS CLIENTE ;


--- Iner Join

SELECT ORDER_ID
    ,PEDIDO.ORDER_STATUS
    ,CLIENTE.CUSTOMER_ID
    ,CLIENTE.CUSTOMER_CITY
    ,CLIENTE.CUSTOMER_STATE
FROM ORDERS PEDIDO INNER JOIN CUSTOMERS CLIENTE
ON PEDIDO.CUSTOMER_ID = CLIENTE.CUSTOMER_ID;


